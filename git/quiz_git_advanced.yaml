id: git_advanced
category: git
level: advanced
title: Git Expert Level
description: Test your expert-level knowledge of Git internals and advanced operations

questions:
  - id: git_a1
    question: What is a Git packfile?
    options:
      - A compressed collection of Git objects
      - A type of branch in the repository
      - A configuration setting in Git
      - A metadata file for Git history
    correct_answer: 0
    explanation: A packfile is Git's method for storing multiple objects in a compressed format, improving storage efficiency and performance.
    source: https://git-scm.com/book/en/v2/Git-Internals-Packfiles

  - id: git_a2
    question: What is the purpose of git-filter-branch?
    options:
      - Rewrite revision history by filtering files or commits
      - Create new branches from existing ones
      - Backup branch data into separate directories
      - Synchronize branches with remote repositories
    correct_answer: 0
    explanation: git-filter-branch lets you rewrite Git history by filtering specific files, directories, or commits, useful for removing sensitive data or restructuring repositories.
    source: https://git-scm.com/docs/git-filter-branch

  - id: git_a3
    question: What is a Git shallow clone?
    options:
      - A repository clone with truncated history
      - A partial branch checkout for specific files
      - A clone limited to the latest commits
      - A clone without branch references
    correct_answer: 0
    explanation: A shallow clone, created using the --depth option, downloads only recent commit history, saving bandwidth and storage.
    source: https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt

  - id: git_a4
    question: What is Git's object model composed of?
    options:
      - Blobs, trees, commits, and tags
      - Commit histories and branches
      - Repository metadata files
      - Tags and branch definitions
    correct_answer: 0
    explanation: Git's object model includes blobs (file contents), trees (directory structures), commits (snapshots), and tags (named references to commits).
    source: https://git-scm.com/book/en/v2/Git-Internals-Git-Objects

  - id: git_a5
    question: What is a Git worktree?
    options:
      - A linked working tree associated with the same repository
      - A detached head state for commits
      - A feature branch for testing
      - A staging area for changes
    correct_answer: 0
    explanation: Git worktrees allow multiple working trees to be linked to a single repository, enabling simultaneous checkouts of different branches.
    source: https://git-scm.com/docs/git-worktree

  - id: git_a6
    question: What is the purpose of git-notes?
    options:
      - Attach notes to objects without modifying commits
      - Append commit messages to repositories
      - Manage branch-level metadata
      - Create summary notes for changes
    correct_answer: 0
    explanation: git-notes allows attaching additional metadata or comments to Git objects without altering their actual contents or SHA-1 hash.
    source: https://git-scm.com/docs/git-notes

  - id: git_a7
    question: What is a Git reference?
    options:
      - A pointer to a commit's SHA-1 hash
      - A branch-specific configuration file
      - A bookmark for repository snapshots
      - A direct link to a repository clone
    correct_answer: 0
    explanation: Git references (refs) store pointers to specific commits, making navigation and branch management easier in repositories.
    source: https://git-scm.com/book/en/v2/Git-Internals-Git-References

  - id: git_a8
    question: What is the purpose of git-replace?
    options:
      - Replace an object in Git with another
      - Substitute repository metadata files
      - Switch branches in detached head states
      - Overwrite commit messages in history
    correct_answer: 0
    explanation: git-replace creates refs that temporarily substitute one Git object for another without rewriting history.
    source: https://git-scm.com/docs/git-replace

  - id: git_a9
    question: What is a Git bundle?
    options:
      - A portable file containing Git objects and references
      - A snapshot of repository branches
      - A collection of commit patches
      - A metadata archive for Git operations
    correct_answer: 0
    explanation: Git bundles package repository objects and references into a single file, enabling offline data transfers or backups.
    source: https://git-scm.com/docs/git-bundle

  - id: git_a10
    question: What is the purpose of git-gc?
    options:
      - Clean up unnecessary files and optimize repository storage
      - Reset branches to their last commit
      - Compress repository data without modifying branches
      - Synchronize local and remote repository states
    correct_answer: 0
    explanation: git-gc (garbage collection) removes unreferenced objects and compresses repository data to improve performance and storage efficiency.
    source: https://git-scm.com/docs/git-gc
