id: git_basics
category: git
level: beginner
title: Git Fundamentals
description: Test your knowledge of basic Git concepts and commands

questions:
  - id: git_b1
    question: What is Git?
    options:
      - A distributed version control system
      - A web hosting service
      - A programming language for developers
      - A code editor for version tracking
    correct_answer: 0
    explanation: Git is a distributed version control system that tracks changes in source code during software development, enabling multiple developers to work together on non-linear development.
    source: https://git-scm.com/about

  - id: git_b2
    question: What command initializes a new Git repository?
    options:
      - git init
      - git create
      - git start
      - git new
    correct_answer: 0
    explanation: The 'git init' command creates a new Git repository. It can be used to convert an existing, unversioned project to a Git repository or initialize a new, empty repository.
    source: https://git-scm.com/docs/git-init

  - id: git_b3
    question: What command is used to clone a repository?
    options:
      - git clone
      - git copy
      - git fetch
      - git download
    correct_answer: 0
    explanation: The 'git clone' command copies a remote repository to your local machine, creating a new directory, initializing a .git directory inside it, and pulling all repository data.
    source: https://git-scm.com/docs/git-clone

  - id: git_b4
    question: What command adds files to the staging area?
    options:
      - git add
      - git commit
      - git stage
      - git push
    correct_answer: 0
    explanation: The 'git add' command adds file contents to the staging area (index), preparing them for the next commit.
    source: https://git-scm.com/docs/git-add

  - id: git_b5
    question: What command creates a new commit?
    options:
      - git commit
      - git save
      - git store
      - git push
    correct_answer: 0
    explanation: The 'git commit' command captures a snapshot of the project's currently staged changes, creating a new commit in the repository's history.
    source: https://git-scm.com/docs/git-commit

  - id: git_b6
    question: What command shows the status of files in the working directory?
    options:
      - git status
      - git check
      - git show
      - git info
    correct_answer: 0
    explanation: The 'git status' command displays the state of the working directory and the staging area, showing which changes have been staged, which haven't, and which files aren't being tracked by Git.
    source: https://git-scm.com/docs/git-status

  - id: git_b7
    question: What command creates a new branch?
    options:
      - git branch
      - git checkout
      - git new
      - git create
    correct_answer: 0
    explanation: The 'git branch' command creates a new branch. To create and switch to a new branch in one command, you can use 'git checkout -b branch-name'.
    source: https://git-scm.com/docs/git-branch

  - id: git_b8
    question: What command switches between branches?
    options:
      - git checkout
      - git switch
      - git change
      - git move
    correct_answer: 0
    explanation: The 'git checkout' command switches between branches or restores working tree files. Note that newer versions of Git also support 'git switch' for branch switching.
    source: https://git-scm.com/docs/git-checkout

  - id: git_b9
    question: What command shows the commit history?
    options:
      - git log
      - git show
      - git commits
      - git history
    correct_answer: 0
    explanation: The 'git log' command shows the commit history, displaying information about previous commits including their hash, author, date, and commit message.
    source: https://git-scm.com/docs/git-log

  - id: git_b10
    question: What command downloads changes from a remote repository?
    options:
      - git pull
      - git fetch
      - git sync
      - git download
    correct_answer: 0
    explanation: The 'git pull' command fetches changes from a remote repository and integrates them into the current branch. It's essentially a combination of 'git fetch' and 'git merge'.
    source: https://git-scm.com/docs/git-pull
