id: gitlab_ci_basics
category: cicd
level: beginner
title: GitLab CI Basics
description: Learn the fundamental concepts and components of GitLab CI/CD pipelines

questions:
  - id: q1
    question: What is GitLab CI/CD?
    options:
      - A continuous integration and delivery platform integrated with GitLab
      - A version control system for managing repositories
      - A server for hosting code and running builds
      - A monitoring tool for checking pipeline statuses
    explanation: GitLab CI/CD is a built-in tool within GitLab that enables automation of software development processes using CI and CD principles.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/"
    correct_answer: 0

  - id: q2
    question: What file is used to configure GitLab CI/CD pipelines?
    options:
      - .gitlab-ci.yml
      - pipeline.yml
      - config.yaml
      - build-file.yml
    explanation: The `.gitlab-ci.yml` file is used to define the structure, stages, and actions of a GitLab CI/CD pipeline in a YAML format.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/yaml/"
    correct_answer: 0

  - id: q3
    question: What is a GitLab CI/CD pipeline?
    options:
      - A sequence of automated steps that code goes through from development to deployment
      - A workflow for organizing repositories and branches
      - A system for merging changes into production
      - A dashboard for viewing test results
    explanation: Pipelines in GitLab CI/CD consist of jobs organized into stages that run sequentially or in parallel to automate processes like testing and deployment.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/pipelines/"
    correct_answer: 0

  - id: q4
    question: What is a GitLab Runner?
    options:
      - An application that executes the jobs in your CI/CD pipeline
      - A GitLab-hosted repository viewer
      - A service for managing user access permissions
      - A monitoring tool for CI/CD performance
    explanation: GitLab Runner is an agent that connects to GitLab CI/CD and executes defined jobs in pipelines on designated machines or environments.
    source: "GitLab Documentation - https://docs.gitlab.com/runner/"
    correct_answer: 0

  - id: q5
    question: What is a stage in GitLab CI?
    options:
      - A logical division of jobs in a pipeline that run sequentially
      - A configuration file for pipeline variables
      - A repository-specific branch protection setting
      - A tool for viewing deployment progress
    explanation: Stages group jobs together in GitLab CI/CD pipelines and define the order in which these jobs are executed.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/yaml/#stages"
    correct_answer: 0

  - id: q6
    question: What is an artifact in GitLab CI?
    options:
      - A file or directory created by a job that can be passed to subsequent jobs
      - A temporary cache for storing pipeline metadata
      - A configuration setting for environment variables
      - A record of failed builds and tests
    explanation: Artifacts in GitLab CI/CD allow jobs to produce files that can be used by later stages in the pipeline or downloaded from the GitLab interface.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html"
    correct_answer: 0

  - id: q7
    question: What is a cache in GitLab CI?
    options:
      - A storage mechanism to speed up jobs by reusing previously downloaded or generated files
      - A file or folder produced as an output of a job
      - A setting for defining pipeline-specific security rules
      - A backup of repository settings and logs
    explanation: Caches in GitLab CI/CD store reusable data like dependencies to reduce job execution time by avoiding redundant downloads.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/caching/"
    correct_answer: 0

  - id: q8
    question: What is a job in GitLab CI?
    options:
      - The smallest unit of work in a pipeline that runs commands or scripts
      - A stage in the deployment process for reviewing changes
      - A feature for managing branches and merge requests
      - A dashboard for pipeline progress monitoring
    explanation: Jobs in GitLab CI/CD represent tasks that execute commands or scripts and are defined within `.gitlab-ci.yml` files.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/jobs/"
    correct_answer: 0

  - id: q9
    question: What is a GitLab environment?
    options:
      - A target for deploying applications with specific settings and variables
      - A staging repository for experimental changes
      - A centralized storage for pipeline execution logs
      - A protected branch for deployment reviews
    explanation: Environments in GitLab CI/CD represent distinct stages like development, staging, or production, each with unique deployment settings and variables.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/environments/"
    correct_answer: 0

  - id: q10
    question: What is a GitLab CI/CD variable?
    options:
      - A configuration value that can be used across jobs and pipelines
      - A cache for storing pipeline logs and metadata
      - A script for defining deployment environments
      - A rule for restricting pipeline stages
    explanation: Variables in GitLab CI/CD store configuration values, secrets, or settings that can be referenced in jobs and pipelines for customization and security.
    source: "GitLab Documentation - https://docs.gitlab.com/ee/ci/variables/"
    correct_answer: 0
