id: gitlab_intermediate
category: gitlab
level: intermediate
title: GitLab Advanced Features
description: Test your knowledge of intermediate GitLab concepts and workflows

questions:
  - id: gitlab_i1
    question: What is GitLab Auto DevOps?
    options:
      - A set of preconfigured CI/CD templates for automatic deployment
      - A manual deployment framework for testing changes
      - A tool for organizing GitLab project groups
      - A backup tool for storing CI/CD results
    correct_answer: 0
    explanation: GitLab Auto DevOps simplifies CI/CD workflows by automatically detecting, building, testing, deploying, and monitoring applications using preconfigured templates.
    source: https://docs.gitlab.com/ee/topics/autodevops/

  - id: gitlab_i2
    question: What is GitLab Container Registry?
    options:
      - A private container registry integrated with GitLab for Docker images
      - A storage solution for artifacts from CI/CD pipelines
      - A system for managing runner configurations
      - A monitoring tool for Kubernetes deployments
    correct_answer: 0
    explanation: GitLab Container Registry provides a secure, private Docker image repository integrated with GitLab, supporting CI/CD workflows.
    source: https://docs.gitlab.com/ee/user/packages/container_registry/

  - id: gitlab_i3
    question: What is GitLab Value Stream Analytics?
    options:
      - A tool to measure time spent in software development stages
      - A repository statistics dashboard for tracking code contributions
      - A framework for integrating CI pipelines into projects
      - A monitoring system for release and deployment data
    correct_answer: 0
    explanation: GitLab Value Stream Analytics tracks and visualizes the time spent in each stage of your software development lifecycle to identify inefficiencies and bottlenecks.
    source: https://docs.gitlab.com/ee/user/analytics/value_stream_analytics.html

  - id: gitlab_i4
    question: What is GitLab Review Apps?
    options:
      - Temporary environments created for each merge request to preview changes
      - A testing framework for unit and integration tests
      - A backup system for artifact storage and reuse
      - A deployment tool for staging environments
    correct_answer: 0
    explanation: Review Apps provide live, temporary environments to preview changes introduced by merge requests, enabling better collaboration and feedback.
    source: https://docs.gitlab.com/ee/ci/review_apps/

  - id: gitlab_i5
    question: What is GitLab Security Dashboard?
    options:
      - A centralized view of vulnerabilities in your GitLab projects
      - A tool for managing repository branches and permissions
      - A monitoring framework for pipeline runtime analysis
      - A deployment feature for tracking release history
    correct_answer: 0
    explanation: The Security Dashboard helps teams detect, monitor, and address vulnerabilities across multiple projects for better security posture.
    source: https://docs.gitlab.com/ee/user/application_security/security_dashboard/

  - id: gitlab_i6
    question: What is GitLab Package Registry?
    options:
      - A repository for managing and distributing package dependencies
      - A tool for storing application logs and debugging data
      - A monitoring system for code contributions and activity
      - A service for backing up GitLab runner configurations
    correct_answer: 0
    explanation: GitLab Package Registry allows users to publish, share, and manage package dependencies directly within GitLab projects.
    source: https://docs.gitlab.com/ee/user/packages/package_registry/

  - id: gitlab_i7
    question: What is GitLab Service Desk?
    options:
      - A support system integrated with GitLab issues to track user tickets
      - A dashboard for visualizing CI/CD pipeline progress
      - A monitoring tool for application deployment environments
      - A CI feature for caching artifacts across jobs
    correct_answer: 0
    explanation: GitLab Service Desk creates issues directly from email conversations, enabling external users to report bugs or request support without requiring GitLab accounts.
    source: https://docs.gitlab.com/ee/user/project/service_desk.html

  - id: gitlab_i8
    question: What is GitLab Release Evidence?
    options:
      - A collection of release data stored for compliance and auditing purposes
      - A monitoring framework for pipeline runtime logs
      - A storage tool for package dependencies in CI/CD workflows
      - A deployment system for staging and production environments
    correct_answer: 0
    explanation: Release Evidence captures a snapshot of release-related data, ensuring that releases meet compliance and auditing standards.
    source: https://docs.gitlab.com/ee/user/project/releases/evidence.html

  - id: gitlab_i9
    question: What is GitLab Code Quality?
    options:
      - A tool that analyzes source code for maintainability and style issues
      - A dashboard for managing deployment pipelines and schedules
      - A monitoring system for runtime metrics in Kubernetes clusters
      - A feature for visualizing and comparing merge request activity
    correct_answer: 0
    explanation: GitLab Code Quality analyzes your source code for potential issues, displaying results in merge requests to ensure high-quality contributions.
    source: https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html

  - id: gitlab_i10
    question: What is GitLab Web IDE?
    options:
      - A browser-based integrated development environment for GitLab projects
      - A dashboard for managing CI/CD runners and configurations
      - A monitoring tool for live application performance metrics
      - A version control interface for comparing commit histories
    correct_answer: 0
    explanation: GitLab Web IDE allows users to edit, commit, and collaborate on code directly in the GitLab web interface without requiring local tools.
    source: https://docs.gitlab.com/ee/user/project/web_ide/
